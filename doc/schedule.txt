Dartling Schedule

To do

entities forEach 
get random entity?
error handling?
log?
attribute validations (required, type, length)
id validation
add entity cannot violate the max constraint
add must increment if increment
remove entity cannot violate the min constraint
property update propagations 
pre & post
observers (notifications)
persistance
indexes? 
undo?
actions, transactions?

To do with reflection

filter returns Entities (reflection needed)
sort entities
copy entities

2012-07-23, 18:10
unit test for getEntityById
schedule.txt

2012-07-23, 18:05
getEntityById
unit test for getEntityById

2012-07-23, 17:40
Id
getId
getEntityById

2012-07-23, 14:32
oid Entity map
getEntity -> getEntityByCode
getEntity uses Oid

2012-07-23, 13:28
source entities
propagate to source
filter returns list of entities
add from a list of entities
get a new list from the list of entities

2012-07-22, 13:20
display code only if not null

2012-07-22, 13:12
data/user
data/web
test/user
test/web

2012-07-22, 12:02
Neighbor is abstract
Neighbors deleted
Parent extends Neighbor
Child extends Neighbor

2012-07-22, 10:23
length -> count
Entries -> Data
display title

2012-07-21
_oid
_attributeMap
_parentMap
_childMap
_entityList
_entityMap
Entry -> Entries
_entryConceptMap
_concept
core -> essential
code does not have to be used; if not used list only
if code used, it cannot be updated (only once from null to not null)
  in future, notification may be used to allow for update
updated: add, contains, getEntity


2012-07-20:
code is not updateable
copy entity
equals
equals in content
entity to string
core attribute
derive attribute
absorb parent
update property

2012-07-19: 
Added json model from MagicBoxes (transfer/json.dart).
Updated field names in meta and model.
Renamed Library to Catalog (web/Catalog).
Used json in Catalog.

2012-07-13: 
Started


